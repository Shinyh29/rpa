Constructing DataFrame from a dictionary.


랜덤만들기
df2 = pd.DataFrame((np.random.randint(low=0, high=1.00, size=(10, 5))), 
index = pd.date_range('2019-05-05',periods=10), 
columns=['US_Nasdaq', 'US_S&P', 'US_Dow', 'India_Nifty', 'China_CSI'])




>>> d = {'col1': [1, 2], 'col2': [3, 4]}
>>> df = pd.DataFrame(data=d)
>>> df
   col1  col2
0     1     3
1     2     4

Notice that the inferred dtype is int64.

>>> df.dtypes
col1    int64
col2    int64
dtype: object

To enforce a single dtype:

>>> df = pd.DataFrame(data=d, dtype=np.int8)
>>> df.dtypes
col1    int8
col2    int8
dtype: object

Constructing DataFrame from numpy ndarray:

>>> df2 = pd.DataFrame(np.random.randint(low=0, high=10, size=(5, 5)),
...                    columns=['a', 'b', 'c', 'd', 'e'])
>>> df2
    a   b   c   d   e
0   2   8   8   3   4
1   4   2   9   0   9
2   1   0   7   8   0
3   5   1   7   1   3
4   6   0   2   4   2

See also
--------
DataFrame.from_records : constructor from tuples, also record arrays
DataFrame.from_dict : from dicts of Series, arrays, or dicts
DataFrame.from_items : from sequence of (key, value) pairs
pandas.read_csv, pandas.read_table, pandas.read_clipboard





랜덤넘버 밸류넣고. 
row (1~9) [index]
컬럼 abcde
 df2 = pd.DataFrame(np.random.randint(low=1, high=10, size=(10, 5)), columns=['a', 'b', 'c', 'd', 'e'])
