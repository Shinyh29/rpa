

from pandas_datareader import data

names = ['AAPL','GOOG','MSFT','DELL','GS','MS','BAC','C']

def get_px(stock, start, end):
    return data.get_data_yahoo(stock, start, end)['Close']
px = pd.DataFrame({n: get_px(n, '1/1/2009', '6/1/2019') for n in names})

px = px.asfreq('B').fillna(method='pad')

rets = px.pct_change()

((1+rets).cumprod() - 1).plot()

# rets :: 데이터프레임 (일간 수익률) 
# ((1+rets).cumprod() - 1) :: 누적수익률 값





#------------------------------------------------
weightAfter = (1+rets).cumprod() -1
port = pd.Series(0.5 * weightAfter['AAPL'] + 0.5 * weightAfter['GOOG'],index = weightAfter.index)




#------------------------------------------------



#------------------------------------------------









 def calc_mom(price, lookback, lag):
    mom_ret = price.shift(lag).pct_change(lookback)
    ranks = mom_ret.rank(axis = 1, ascending=False)
    demeaned = ranks.subtract(ranks.mean(axis=1), axis = 0)
    return demeaned.divide(demeaned.std(axis=1),axis =0)
compound = lambda x : (1+x).prod()-1
daily_sr = lambda x : x.mean() / x.std()

def strat_sr(prices, lb, hold):
    #포트폴리오 가중치 계산
    freq = '%dB' % hold
    port = calc_mom(prices, lb, lag=1)
    daily_rets = prices.pct_change()
    #
    #포트폴리오 수익 계산
    port = port.shift(1).resample(freq, how='first')
    returns = daily_rets.resample(freq, how=compound)
    port_rets = (port * returns).sum(axis=1)
    return daily_sr(port_rets) * np.sqrt(252/hold)









#------------------------------------------------


strat_sr(px, 70, 30)


'''
C:\Anaconda3_64\lib\site-packages\ipykernel_launcher.py:8: FutureWarning: how in .resample() is deprecated
the new syntax is .resample(...).first()
  
C:\Anaconda3_64\lib\site-packages\ipykernel_launcher.py:9: FutureWarning: how in .resample() is deprecated
the new syntax is .resample(...)..apply(<func>)
  if __name__ == '__main__':
Out[145]: 0.21810087781260798

'''




## ----------------------------------------------------------------------

## ----------------------------------------------------------------------



from collections import defaultdict


lookbacks = range(20, 90, 5)
holdings = range(20, 90, 4)
dd= defaultdict(dict)
for lb in lookbacks:
    for hold in holdings:
        dd[lb][hold] = strat_sr(px, lb, hold)
        
ddf = pd.DataFrame(dd)
ddf.index.name = 'Holding Period'
ddf.columns.name = 'Lookback Period'

## ----------------------------------------------------------------------

## ----------------------------------------------------------------------



import matplotlib.pyplot as plt

((1+ddf).cumprod() -1).plot()
# Out[150]: <matplotlib.axes._subplots.AxesSubplot at 0x133c8ac8>





def heatmap(df, cmap=plt.cm.gray_r):
    fig= plt.figure()
    ax = fig.add_subplot(111)
    axim = ax.imshow(df.values, cmap=cmap, interpolation='nearest')
    ax.set_xlabel(df.columns.name)
    ax.set_xticks(np.arange(len(df.columns)))
    ax.set_xticklabels(list(df.columns))
    ax.set_ylabel(df.index.name)
    ax.set_yticks(np.arange(len(df.index)))
    ax.set_yticklabels(list(df.index))
    plt.colorbar(axim)
    

heatmap(ddf)
